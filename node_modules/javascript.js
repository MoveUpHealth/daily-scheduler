console.log(dateFns.isToday(new Date()))

var weekday = ['Sunday', 'Monday', 'Tuesday','Wednesday', 'Thursday', 'Friday', 'Saturday']
var dayTimes = ['9:00 AM', '10:00 AM', '11:00 AM', '12:00 PM', '1:00 PM', '2:00 PM', '3:00 PM', '4:00 PM', '5:00 PM',]
var currentDay = weekday[dateFns.getDay(new Date())]
var result = dateFns.format(
    new Date(),
    "h:mmaa MMMM Do, YYYY"
)
console.log(dateFns.getHours())


console.log("Date: " + result)



function displayDate(){
    
    $('#day').text(currentDay + ' ' + result)
}


    displayDate()
    dsiplayHourly()

function dsiplayHourly(){
    for (var i=0; i < dayTimes.length; i++){
        var colTime = document.getElementsByClassName('time-block')
        colTime[i].innerHTML = dayTimes[i]
        console.log(colTime[i])
        if(dayTimes[i].charAt(1) == ':'){
            var hours = dayTimes[i].charAt(0)
            
        } 
        else {
            hours = dayTimes[i].charAt(0).concat(dayTimes[i].charAt(1))
        }
        if(hours >= 1 && hours < 6){
            hours = parseInt(hours) + 12
            
        }
        console.log(hours)
        var setHour = dateFns.setHours(new Date (), hours)
        // var minDifference = dateFns.differenceInMinutes(new Date(2020, 9, 29, 14, 05), dateFns.setMinutes(setHour, 0))
        var hoursDifference = dateFns.differenceInHours(new Date(2020, 9, 29, 14, 05), dateFns.setHours(new Date (), hours))
        var sameTime = dateFns.isSameHour(new Date(2020, 9, 29, 14, 05), dateFns.setHours(new Date (), hours))
        console.log(hoursDifference)
        console.log(sameTime)
        
         if(dateFns.isSameHour(new Date(2020, 9, 29, 14, 05), dateFns.setHours(new Date (), hours))){
            colTime[i].className = 'col present time-block'
        } else if(hoursDifference >= 0){
            colTime[i].className = 'col past time-block'}
            else {
            colTime[i].className = 'col future time-block'
        }

    };


}




